syntax = "proto3";

package decentraland.sdk.ecs6;
import "decentraland/common/vectors.proto";
import "decentraland/common/colors.proto";


message ECS6Color4 {
    float r = 1;
    float g = 2;
    float b = 3;
    optional float a = 4;
}

message Area {
    optional decentraland.common.Vector3 box = 1; 
}

message UiValue {
    optional float value = 1;

    enum UiValueType {
        UVT_PERCENT = 0;
        PIXELS = 1;
    }
    optional UiValueType type = 2;
}

// CLASS_ID.AVATAR_MODIFIER_AREA
message ECS6ComponentAvatarModifierArea {
    optional Area area = 1;
    repeated string modifiers = 2;
    repeated string exclude_ids = 3;
}

// CLASS_ID.TRANSFORM
message ECS6ComponentTransform {
    optional decentraland.common.Vector3 position = 1;
    optional decentraland.common.Quaternion rotation = 2;
    optional decentraland.common.Vector3 scale = 3;
}


// CLASS_ID.AVATAR_ATTACH
message ECS6ComponentAttachToAvatar {
    enum AttachToAvatarAnchorPointId {
        ATAAP_POSITION = 0;
        ATAAP_NAME_TAG = 1;
        ATAAP_LEFT_HAND = 2;
        ATAAP_RIGHT_HAND = 3;
    }

    optional string avatar_id = 1;
    optional AttachToAvatarAnchorPointId anchor_point_id = 2;
    optional string avatar_scene_id = 3;
}

// CLASS_ID.BILLBOARD
message ECS6ComponentBillboard {
    optional bool x = 1;
    optional bool y = 2;
    optional bool z = 3;
}

// CLASS_ID.BOX_SHAPE
message ECS6ComponentBoxShape {
    optional bool with_collisions = 1;
    optional bool is_pointer_blocker = 2;
    optional bool visible = 3;
    repeated float uvs = 4;
}

// CLASS_ID.SPHERE_SHAPE
message ECS6ComponentSphereShape {
    optional bool with_collisions = 1;
    optional bool is_pointer_blocker = 2;
    optional bool visible = 3;
}

// CLASS_ID.CIRCLE_SHAPE
message ECS6ComponentCircleShape {
    optional bool with_collisions = 1;
    optional bool is_pointer_blocker = 2;
    optional bool visible = 3;
    optional float segments = 4;
    optional float arc = 5;
}


// CLASS_ID.PLANE_SHAPE
message ECS6ComponentPlaneShape {
    optional bool with_collisions = 1;
    optional bool is_pointer_blocker = 2;
    optional bool visible = 3;
    repeated float uvs = 4;
    optional float width = 6;
    optional float height = 7;
}


// CLASS_ID.CONE_SHAPE
message ECS6ComponentConeShape {
    optional bool with_collisions = 1;
    optional bool is_pointer_blocker = 2;
    optional bool visible = 3;
    optional float radius_top = 4;
    optional float radius_bottom = 5;
    optional float segments_height = 6;
    optional float segments_radial = 7;
    optional bool open_ended = 8;
    optional float radius = 9;
    optional float arc = 10;
}

// CLASS_ID.CYLINDER_SHAPE
message ECS6ComponentCylinderShape {
    optional bool with_collisions = 1;
    optional bool is_pointer_blocker = 2;
    optional bool visible = 3;
    optional float radius_top = 4;
    optional float radius_bottom = 5;
    optional float segments_height = 6;
    optional float segments_radial = 7;
    optional bool open_ended = 8;
    optional float radius = 9;
    optional float arc = 10;
}


// CLASS_ID.GLTF_SHAPE
message ECS6ComponentGltfShape {
    optional bool with_collisions = 1;
    optional bool is_pointer_blocker = 2;
    optional bool visible = 3;
    optional string src = 4;
}


// CLASS_ID.NFT_SHAPE
message ECS6ComponentNftShape {
    enum PictureFrameStyle {
        PFS_CLASSIC = 0;
        PFS_BAROQUE_ORNAMENT = 1;
        PFS_DIAMOND_ORNAMENT = 2;
        PFS_MINIMAL_WIDE = 3;
        PFS_MINIMAL_GREY = 4;
        PFS_BLOCKY = 5;
        PFS_GOLD_EDGES = 6;
        PFS_GOLD_CARVED = 7;
        PFS_GOLD_WIDE = 8;
        PFS_GOLD_ROUNDED = 9;
        PFS_METAL_MEDIUM = 10;
        PFS_METAL_WIDE = 11;
        PFS_METAL_SLIM = 12;
        PFS_METAL_ROUNDED = 13;
        PFS_PINS = 14;
        PFS_MINIMAL_BLACK = 15;
        PFS_MINIMAL_WHITE = 16;
        PFS_TAPE = 17;
        PFS_WOOD_SLIM = 18;
        PFS_WOOD_WIDE = 19;
        PFS_WOOD_TWIGS = 20;
        PFS_CANVAS = 21;
        PFS_NONE = 22;
    }

    optional bool with_collisions = 1;
    optional bool is_pointer_blocker = 2;
    optional bool visible = 3;
    optional string src = 4;
    optional PictureFrameStyle style = 5;
    optional decentraland.common.Color3 color = 6;
}


// CLASS_ID.TEXTURE
message ECS6ComponentTexture {
    optional string src = 1;
    optional int32 sampling_mode = 2;
    optional int32 wrap = 3;
    optional bool has_alpha = 4;
}


// CLASS_ID.ANIMATION
message ECS6ComponentAnimator {
    message AnimationState {
        optional string clip = 1;
        optional bool looping = 2;
        optional float weight = 3; 
        optional bool playing = 4; 
        optional bool should_reset = 5; 
        optional float speed = 6; 
        optional string name = 7; 
    }

    repeated AnimationState states = 1;
}

// CLASS_ID.OBJ_SHAPE
message ECS6ComponentObjShape {
    optional bool with_collisions = 1;
    optional bool is_pointer_blocker = 2;
    optional bool visible = 3;
    optional string src = 4;
}



// CLASS_ID.FONT
message ECS6ComponentFont {
    optional string src = 1;
}

// CLASS_ID.TEXT_SHAPE
message ECS6ComponentTextShape {
    optional float outline_width = 1;
    optional decentraland.common.Color3 outline_color = 2;
    optional decentraland.common.Color3 color = 3;
    optional float font_size = 4;
    optional string font = 5;
    optional float opacity = 6;
    optional string value = 7;
    optional string line_spacing = 8;
    optional int32 line_count = 9;
    optional bool text_wrapping = 10;
    optional float shadow_blur = 11;
    optional float shadow_offset_x = 12;
    optional float shadow_offset_y = 13;
    optional decentraland.common.Color3 shadow_color = 14;
    optional string h_text_align = 15;
    optional string v_text_align = 16;
    optional float width = 17;
    optional float height = 18;
    optional float padding_top = 19;
    optional float padding_right = 20;
    optional float padding_bottom = 21;
    optional float padding_left = 22;
    optional bool billboard = 23;
    optional bool visible = 24;
}


// CLASS_ID.PBR_MATERIAL
message ECS6ComponentMaterial {
    optional float alpha_test = 1;
    optional ECS6Color4 albedo_color = 2;
    optional decentraland.common.Color3 emissive_color = 3;
    optional float metallic = 4;
    optional float roughness = 5;
    optional decentraland.common.Color3 reflectivity_color = 6;
    optional float direct_intensity = 7;
    optional float micro_surface = 8;
    optional float emissive_intensity = 9;
    optional float specular_intensity = 10;
    optional string albedo_texture = 11;
    optional string alpha_texture = 12;
    optional string emissive_texture = 13;
    optional string bump_texture = 14;
    optional float transparency_mode = 15;
    optional bool cast_shadows = 16;
}

// CLASS_ID.BASIC_MATERIAL
message ECS6ComponentBasicMaterial {
    optional float alpha_test = 1;
    optional string texture = 2;
    optional bool cast_shadows = 3;
}

// CLASS_ID.UUID_CALLBACK
message ECS6ComponentUuidCallback {
    optional string button = 1;
    optional string hover_text = 2;
    optional float distance = 3;
    optional bool show_feedback = 4;
    optional string type = 5;
    optional string uuid = 6;
}

// CLASS_ID.SMART_ITEM)
message ECS6ComponentSmartItem {}

// CLASS_ID.VIDEO_CLIP
message ECS6ComponentVideoClip {
    optional string url = 1;
}

// CLASS_ID.VIDEO_TEXTURE
message ECS6ComponentVideoTexture {
    enum VideoStatus {
        NONE = 0;
        ERROR = 1;
        LOADING = 2;
        READY = 3;
        PLAYING = 4;
        BUFFERING = 5;
    }
      
    optional int32 sampling_mode = 1;
    optional int32 wrap = 2;
    optional float volume = 3;
    optional float playback_rate = 4;
    optional float seek = 5;
    optional bool playing = 6;
    optional bool loop = 7;
    optional string video_clip_id = 8;
}


// CLASS_ID.CAMERA_MODE_AREA
message ECS6ComponentCameraModeArea {
    enum CameraMode {
        CM_FIRST_PERSON = 0;
        CM_THIRD_PERSON = 1;
        CM_BUILDING_TOOL_GOD_MODE = 2;
    }

    Area area = 1;
    CameraMode camera_mode = 2;
}

// CLASS_ID.AVATAR_TEXTURE
message ECS6ComponentAvatarTexture {
    optional int32 sampling_mode = 1;
    optional int32 wrap = 2;
    optional bool has_alpha = 3;
    optional string user_id = 4;
}

// CLASS_ID.AUDIO_CLIP
message ECS6ComponentAudioClip {
  optional string url = 1;
  optional bool loop = 2;
  optional string loading_complete_event_id = 3;
  optional float volume = 4;
}

// CLASS_ID.AUDIO_SOURCE
message ECS6ComponentAudioSource {
  optional string audio_clip_id = 1;
  optional bool loop = 2;
  optional float volume = 3;
  optional bool playing = 4;
  optional float pitch = 5;
  optional int32 played_at_timestamp = 6;
}

// CLASS_ID.AUDIO_STREAM
message ECS6ComponentAudioStream {
  optional string url = 1;
  optional bool playing = 2;
  optional float volume = 3;
}

// CLASS_ID.AVATAR_SHAPE
message ECS6ComponentAvatarShape {
  optional string id = 1;
  optional string name = 2;
  optional string expression_trigger_id = 3;
  optional int64 expression_trigger_timestamp = 4;
  optional string body_shape = 5;
  repeated string wearables = 6;

  message Emote {
    optional int32 slot = 1;
    optional string urn = 2;
  }

  repeated Emote emotes = 7;
  optional ECS6Color4 skin_color = 8;
  optional ECS6Color4 hair_color = 9;
  optional ECS6Color4 eye_color = 10;
  optional bool use_dummy_model = 11;
  optional bool talking = 12;
}

// CLASS_ID.GIZMOS
message ECS6ComponentGizmos {
  optional bool position = 1;
  optional bool rotation = 2;
  optional bool scale = 3;
  optional bool cycle = 4;
  optional string selected_gizmo = 5;
  optional bool local_reference = 6;
}

// NO CLASS
message ECS6ComponentUiShape {
    optional string name = 1;
    optional bool visible = 2;
    optional float opacity = 3;
    optional string h_align = 4;
    optional string v_align = 5;
    optional UiValue width = 6;
    optional UiValue height = 7;
    optional UiValue position_x = 8;
    optional UiValue position_y = 9;
    optional bool is_pointer_blocker = 10;
    optional string parent_component = 11;
}

// CLASS_ID.UI_CONTAINER_RECT
message ECS6ComponentUiContainerRect {
    // UiShape
    optional string name = 1;
    optional bool visible = 2;
    optional float opacity = 3;
    optional string h_align = 4;
    optional string v_align = 5;
    optional UiValue width = 6;
    optional UiValue height = 7;
    optional UiValue position_x = 8;
    optional UiValue position_y = 9;
    optional bool is_pointer_blocker = 10;
    optional string parent_component = 14;
    // UiShape
    optional float thickness = 11;
    optional ECS6Color4 color = 12;
    optional bool alignment_uses_size = 13;
}

// CLASS_ID.UI_CONTAINER_STACK
message ECS6ComponentUiContainerStack {
    // UiShape
    optional string name = 1;
    optional bool visible = 2;
    optional float opacity = 3;
    optional string h_align = 4;
    optional string v_align = 5;
    optional UiValue width = 6;
    optional UiValue height = 7;
    optional UiValue position_x = 8;
    optional UiValue position_y = 9;
    optional bool is_pointer_blocker = 10;
    optional string parent_component = 16;
    // UiShape

    optional bool adapt_width = 11;
    optional bool adapt_height = 12;
    optional ECS6Color4 color = 13;

    enum UIStackOrientation {
        VERTICAL = 0;
        HORIZONTAL = 1;
    }
    optional UIStackOrientation stack_orientation = 14;
    optional float spacing = 15;
}

// CLASS_ID.UI_BUTTON_SHAPE
message ECS6ComponentUiButton {
    // UiShape
    optional string name = 1;
    optional bool visible = 2;
    optional float opacity = 3;
    optional string h_align = 4;
    optional string v_align = 5;
    optional UiValue width = 6;
    optional UiValue height = 7;
    optional UiValue position_x = 8;
    optional UiValue position_y = 9;
    optional bool is_pointer_blocker = 10;
    optional string parent_component = 26;
    // UiShape

    optional float font_size = 11;
    optional string font_weight = 12;
    optional float thickness = 13;
    optional float corner_radius = 14;
    optional ECS6Color4 color = 15;
    optional ECS6Color4 background = 16;
    optional float padding_top = 17;
    optional float padding_right = 18;
    optional float padding_bottom = 19;
    optional float padding_left = 20;
    optional float shadow_blur = 21;
    optional float shadow_offset_x = 22;
    optional float shadow_offset_y = 23;
    optional ECS6Color4 shadow_color = 24;
    optional string text = 25;
}

// CLASS_ID.UI_TEXT_SHAPE
message ECS6ComponentUiText {
    // UiShape
    optional string name = 1;
    optional bool visible = 2;
    optional float opacity = 3;
    optional string h_align = 4;
    optional string v_align = 5;
    optional UiValue width = 6;
    optional UiValue height = 7;
    optional UiValue position_x = 8;
    optional UiValue position_y = 9;
    optional bool is_pointer_blocker = 10;
    optional string parent_component = 33;
    // UiShape

    optional float outline_width = 11;
    optional ECS6Color4 outline_color = 12;
    optional ECS6Color4 color = 13;
    optional float font_size = 14;
    optional bool font_auto_size = 15;
    optional string font = 16;
    optional string value = 17;
    optional float line_spacing = 18;
    optional int32 line_count = 19;
    optional bool adapt_width = 20;
    optional bool adapt_height = 21;
    optional bool text_wrapping = 22;
    optional float shadow_blur = 23;
    optional float shadow_offset_x = 24;
    optional float shadow_offset_y = 25;
    optional ECS6Color4 shadow_color = 26;
    optional string h_text_align = 27;
    optional string v_text_align = 28;
    optional float padding_top = 29;
    optional float padding_right = 30;
    optional float padding_bottom = 31;
    optional float padding_left = 32;
}

// CLASS_ID.UI_INPUT_TEXT_SHAPE
message ECS6ComponentUiInputText {
    // UiShape
    optional string name = 1;
    optional bool visible = 2;
    optional float opacity = 3;
    optional string h_align = 4;
    optional string v_align = 5;
    optional UiValue width = 6;
    optional UiValue height = 7;
    optional UiValue position_x = 8;
    optional UiValue position_y = 9;
    optional bool is_pointer_blocker = 10;
    optional string parent_component = 39;
    // UiShape

    optional float outline_width = 11;
    optional ECS6Color4 outline_color = 12;
    optional ECS6Color4 color = 13;
    optional float font_size = 14;
    optional string font = 16;
    optional string value = 17;

    optional string placeholder = 33;
    optional float margin = 34;
    optional ECS6Color4 focused_background = 35;

    optional bool text_wrapping = 22;
    optional float shadow_blur = 23;
    optional float shadow_offset_x = 24;
    optional float shadow_offset_y = 25;
    optional ECS6Color4 shadow_color = 26;
    optional string h_text_align = 27;
    optional string v_text_align = 28;
    optional float padding_top = 29;
    optional float padding_right = 30;
    optional float padding_bottom = 31;
    optional float padding_left = 32;

    optional string on_text_changed = 36;
    optional string on_focus = 37;
    optional string on_blur = 38;
    optional string on_text_submit = 40;
    optional string on_changed = 41;
}

// CLASS_ID.UI_IMAGE_SHAPE
message ECS6ComponentUiImage {
    // UiShape
    optional string name = 1;
    optional bool visible = 2;
    optional float opacity = 3;
    optional string h_align = 4;
    optional string v_align = 5;
    optional UiValue width = 6;
    optional UiValue height = 7;
    optional UiValue position_x = 8;
    optional UiValue position_y = 9;
    optional bool is_pointer_blocker = 10;
    optional string parent_component = 22;
    // UiShape

    optional float source_left = 11;
    optional float source_top = 12;
    optional float source_width = 13;
    optional float source_height = 14;
    optional string source = 15; 
    optional float padding_top = 16;
    optional float padding_right = 17;
    optional float padding_bottom = 18;
    optional float padding_left = 19;
    optional bool size_in_pixels = 20;

    optional string on_click = 21;
}

// CLASS_ID.UI_SLIDER_SHAPE
message ECS6ComponentUiScrollRect {
    // UiShape
    optional string name = 11;
    optional bool visible = 12;
    optional float opacity = 13;
    optional string h_align = 14;
    optional string v_align = 15;
    optional UiValue width = 16;
    optional UiValue height = 17;
    optional UiValue position_x = 18;
    optional UiValue position_y = 19;
    optional bool is_pointer_blocker = 20;
    optional string parent_component = 21;
    // UiShape

    optional float value_x = 1;
    optional float value_y = 2;
    optional ECS6Color4 background_color = 3;
    optional bool is_horizontal = 4;
    optional bool is_vertical = 5;
    optional float padding_top = 6;
    optional float padding_right = 7;
    optional float padding_bottom = 8;
    optional float padding_left = 9;

    optional string on_changed = 10;
}

// CLASS_ID.UI_WORLD_SPACE_SHAPE
message ECS6ComponentUiWorldSpaceShape {
    // UiShape
    optional string name = 1;
    optional bool visible = 2;
    optional float opacity = 3;
    optional string h_align = 4;
    optional string v_align = 5;
    optional UiValue width = 6;
    optional UiValue height = 7;
    optional UiValue position_x = 8;
    optional UiValue position_y = 9;
    optional bool is_pointer_blocker = 10;
    optional string parent_component = 11;
    // UiShape
}

// CLASS_ID.UI_SCREEN_SPACE_SHAPE
message ECS6ComponentUiScreenSpaceShape {
    // UiShape
    optional string name = 1;
    optional bool visible = 2;
    optional float opacity = 3;
    optional string h_align = 4;
    optional string v_align = 5;
    optional UiValue width = 6;
    optional UiValue height = 7;
    optional UiValue position_x = 8;
    optional UiValue position_y = 9;
    optional bool is_pointer_blocker = 10;
    optional string parent_component = 11;
    // UiShape
}

// CLASS_ID.UI_FULLSCREEN_SHAPE
message ECS6ComponentUiFullScreenShape {
    // UiShape
    optional string name = 1;
    optional bool visible = 2;
    optional float opacity = 3;
    optional string h_align = 4;
    optional string v_align = 5;
    optional UiValue width = 6;
    optional UiValue height = 7;
    optional UiValue position_x = 8;
    optional UiValue position_y = 9;
    optional bool is_pointer_blocker = 10;
    optional string parent_component = 11;
    // UiShape
}
