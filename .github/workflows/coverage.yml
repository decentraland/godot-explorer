name: ðŸ”Ž Test & Coverage
on:
  workflow_call:

concurrency:
  group: ci-${{ github.actor }}-${{ github.head_ref || github.run_number }}-${{ github.ref }}-coverage
  cancel-in-progress: true

jobs:
  coverage:
    name: Test & Coverage
    runs-on: gpu-godot-docker
    timeout-minutes: 30
    env:
      GODOT4_BIN: ${{ github.workspace }}/.bin/godot/godot4_bin
    steps:
      - name: Checkout sources
        uses: actions/checkout@v4

      # To host test-realm local server
      - name: Use Node.js 16.x
        uses: actions/setup-node@v1
        with:
          node-version: 16.x

      - name: Prepare and run local test-realm
        run: |
          mkdir -p tests/server
          cd tests/server
          npm init -y
          npm install @dcl/scene-explorer-tests@1.0.0-20240430222335.commit-2b82e41
          sed -i 's|https://decentraland.github.io/scene-explorer-tests/|http://localhost:7666/|g' node_modules/@dcl/scene-explorer-tests/static/scene-explorer-tests/about
          npm i -g http-server
          http-server node_modules/@dcl/scene-explorer-tests/static -p 7666 &
        # /changerealm http://localhost:7666/scene-explorer-tests/

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: 1.79
          override: true
          components: llvm-tools-preview

      - name: Prepare graphics renderering
        run: |
          sudo apt-get -y install xvfb
          sudo /usr/bin/Xvfb :0 -screen 0 1280x1024x24 &

      # Dependencies section
      - name: Install dependencies
        uses: ./.github/actions/install-deps

      - name: cargo run -- install
        run: cargo run -- install --no-templates

      # Build section

      - name: Download grcov
        run: |
          mkdir -p "${HOME}/.local/bin"
          curl -sL https://github.com/mozilla/grcov/releases/download/v0.8.10/grcov-x86_64-unknown-linux-gnu.tar.bz2 | tar jxf - -C "${HOME}/.local/bin"
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Build
        working-directory: lib
        run: cargo build
      - name: Copy library
        run: cp lib/target/debug/libdclgodot.so godot/lib/

      - name: Import Assets
        uses: ./.github/actions/import-assets
        with:
          cache: false

      - name: Run xtask coverage
        run: |
          export DISPLAY=:99
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 &
          cargo run -- coverage

      - name: Upload to codecov.io
        if: success() || failure()
        uses: codecov/codecov-action@v3
        with:
          files: rust/coverage/*.lcov

      - name: Upload artifacts
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-snapshots
          path: |
            tests/snapshots/scenes/comparison/**/*
            tests/snapshots/avatar-image-generation/comparison/**/*
            tests/snapshots/client/comparison/**/*
